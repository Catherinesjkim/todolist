// The string below is a marker and will be replaced by the real version number. DO NOT CHANGE
export const VERSION = 'react-' + '1.1.0';
// Treatments
export const ON = 'on';
export const OFF = 'off';
export const CONTROL = 'control'; // SplitIO default value
export const CONTROL_WITH_CONFIG = {
    treatment: 'control',
    config: null,
};
export const getControlTreatmentsWithConfig = (splitNames) => {
    return splitNames.reduce((pValue, cValue) => {
        pValue[cValue] = CONTROL_WITH_CONFIG;
        return pValue;
    }, {});
};
// Warning and error messages
export const WARN_SF_CONFIG_AND_FACTORY = '[WARN] Both a config and factory props were provided to SplitFactory. Config prop will be ignored.';
export const ERROR_SF_NO_CONFIG_AND_FACTORY = '[ERROR] SplitFactory must receive either a Split config or a Split factory as props.';
export const ERROR_SC_NO_FACTORY = '[ERROR] SplitClient does not have access to a Split factory. This is because it is not inside the scope of a SplitFactory component or SplitFactory was not properly instantiated.';
export const WARN_ST_NO_CLIENT = '[WARN] SplitTreatments does not have access to a Split client. This is because it is not inside the scope of a SplitFactory component or SplitFactory was not properly instantiated.';
