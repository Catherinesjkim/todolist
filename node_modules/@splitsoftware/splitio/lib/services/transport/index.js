"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = Fetcher;
exports.__getAxiosInstance = __getAxiosInstance;

var _concat = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/concat"));

var _axios = _interopRequireDefault(require("axios"));

var _Errors = require("../../utils/lang/Errors");

var _logger = _interopRequireDefault(require("../../utils/logger"));

var log = (0, _logger.default)('splitio-services:service');

var _axiosInstance = _axios.default.create();

function Fetcher(request) {
  return _axiosInstance.request(request).catch(function (error) {
    var _context, _context2;

    var resp = error.response;
    var url = error.config ? error.config.url : 'unknown';
    var msg = '';

    if (resp) {
      // An HTTP error
      switch (resp.status) {
        case 404:
          msg = 'Invalid API key or resource not found.';
          break;

        default:
          msg = resp.statusText;
          break;
      }
    } else {
      // Something else, either an error making the request or a Network error.
      msg = error.message;
    }

    if (!resp || resp.status !== 403) // 403's log we'll be handled somewhere else.
      log.error((0, _concat.default)(_context = (0, _concat.default)(_context2 = "Response status is not OK. Status: ".concat(resp ? resp.status : 'NO_STATUS', ". URL: ")).call(_context2, url, ". Message: ")).call(_context, msg));
    throw new _Errors.SplitNetworkError(msg, resp ? resp.status : 'NO_STATUS');
  });
} // This function is only exposed for unit testing purposses.


function __getAxiosInstance() {
  return _axiosInstance;
}