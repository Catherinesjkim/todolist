{"ast":null,"code":"import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";\nimport { LOCALHOST_MODE, STANDALONE_MODE, PRODUCER_MODE, CONSUMER_MODE } from '../constants';\n\nfunction mode(key, mode) {\n  var _context; // Leaving the comparison as is, in case we change the mode name but not the setting.\n\n\n  if (key === 'localhost') return LOCALHOST_MODE;\n  if (_indexOfInstanceProperty(_context = [STANDALONE_MODE, PRODUCER_MODE, CONSUMER_MODE]).call(_context, mode) === -1) throw Error('Invalid mode provided');\n  return mode;\n}\n\nexport default mode;","map":{"version":3,"sources":["/Users/talianassi/Desktop/todolist/node_modules/@splitsoftware/splitio/es/utils/settings/mode.js"],"names":["_indexOfInstanceProperty","LOCALHOST_MODE","STANDALONE_MODE","PRODUCER_MODE","CONSUMER_MODE","mode","key","_context","call","Error"],"mappings":"AAAA,OAAOA,wBAAP,MAAqC,yDAArC;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,aAA1C,EAAyDC,aAAzD,QAA8E,cAA9E;;AAEA,SAASC,IAAT,CAAcC,GAAd,EAAmBD,IAAnB,EAAyB;AACvB,MAAIE,QAAJ,CADuB,CAGvB;;;AACA,MAAID,GAAG,KAAK,WAAZ,EAAyB,OAAOL,cAAP;AACzB,MAAID,wBAAwB,CAACO,QAAQ,GAAG,CAACL,eAAD,EAAkBC,aAAlB,EAAiCC,aAAjC,CAAZ,CAAxB,CAAqFI,IAArF,CAA0FD,QAA1F,EAAoGF,IAApG,MAA8G,CAAC,CAAnH,EAAsH,MAAMI,KAAK,CAAC,uBAAD,CAAX;AACtH,SAAOJ,IAAP;AACD;;AAED,eAAeA,IAAf","sourcesContent":["import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";\nimport { LOCALHOST_MODE, STANDALONE_MODE, PRODUCER_MODE, CONSUMER_MODE } from '../constants';\n\nfunction mode(key, mode) {\n  var _context;\n\n  // Leaving the comparison as is, in case we change the mode name but not the setting.\n  if (key === 'localhost') return LOCALHOST_MODE;\n  if (_indexOfInstanceProperty(_context = [STANDALONE_MODE, PRODUCER_MODE, CONSUMER_MODE]).call(_context, mode) === -1) throw Error('Invalid mode provided');\n  return mode;\n}\n\nexport default mode;"]},"metadata":{},"sourceType":"module"}