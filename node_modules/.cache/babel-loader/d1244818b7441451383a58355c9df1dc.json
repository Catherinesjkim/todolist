{"ast":null,"code":"import { useContext } from 'react';\nimport SplitContext from './SplitContext';\n/**\n * 'useManager' is a custom hook that returns the Manager instance from the Split factory.\n * It uses the 'useContext' hook to access the factory at Split context, which is updated by\n * the SplitFactory component.\n *\n * @return A Split Manager instance, or null if used outside the scope of SplitFactory\n * @see {@link https://help.split.io/hc/en-us/articles/360020448791-JavaScript-SDK#manager}\n */\n\nconst useManager = () => {\n  const {\n    factory\n  } = useContext(SplitContext);\n  return factory ? factory.manager() : null;\n};\n\nexport default useManager;","map":{"version":3,"sources":["/Users/talianassi/Desktop/todolist/node_modules/@splitsoftware/splitio-react/es/useManager.js"],"names":["useContext","SplitContext","useManager","factory","manager"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA;;;;;;;;;AAQA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAcH,UAAU,CAACC,YAAD,CAA9B;AACA,SAAOE,OAAO,GAAGA,OAAO,CAACC,OAAR,EAAH,GAAuB,IAArC;AACH,CAHD;;AAIA,eAAeF,UAAf","sourcesContent":["import { useContext } from 'react';\nimport SplitContext from './SplitContext';\n/**\n * 'useManager' is a custom hook that returns the Manager instance from the Split factory.\n * It uses the 'useContext' hook to access the factory at Split context, which is updated by\n * the SplitFactory component.\n *\n * @return A Split Manager instance, or null if used outside the scope of SplitFactory\n * @see {@link https://help.split.io/hc/en-us/articles/360020448791-JavaScript-SDK#manager}\n */\nconst useManager = () => {\n    const { factory } = useContext(SplitContext);\n    return factory ? factory.manager() : null;\n};\nexport default useManager;\n"]},"metadata":{},"sourceType":"module"}