{"ast":null,"code":"import { createContext } from 'react';\n/**\n * Split Context is the React Context instance that represents our SplitIO global state.\n * It contains Split SDK objects, such as a factory instance, a client and its status (isReady, isTimedout, lastUpdate)\n * The context is created with default empty values, that eventually SplitFactory and SplitClient access and update.\n */\n\nconst SplitContext = createContext({\n  client: null,\n  factory: null,\n  isReady: false,\n  isTimedout: false,\n  lastUpdate: 0\n});\nexport default SplitContext;","map":{"version":3,"sources":["/Users/talianassi/Desktop/todolist/node_modules/@splitsoftware/splitio-react/es/SplitContext.js"],"names":["createContext","SplitContext","client","factory","isReady","isTimedout","lastUpdate"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA;;;;;;AAKA,MAAMC,YAAY,GAAGD,aAAa,CAAC;AAC/BE,EAAAA,MAAM,EAAE,IADuB;AAE/BC,EAAAA,OAAO,EAAE,IAFsB;AAG/BC,EAAAA,OAAO,EAAE,KAHsB;AAI/BC,EAAAA,UAAU,EAAE,KAJmB;AAK/BC,EAAAA,UAAU,EAAE;AALmB,CAAD,CAAlC;AAOA,eAAeL,YAAf","sourcesContent":["import { createContext } from 'react';\n/**\n * Split Context is the React Context instance that represents our SplitIO global state.\n * It contains Split SDK objects, such as a factory instance, a client and its status (isReady, isTimedout, lastUpdate)\n * The context is created with default empty values, that eventually SplitFactory and SplitClient access and update.\n */\nconst SplitContext = createContext({\n    client: null,\n    factory: null,\n    isReady: false,\n    isTimedout: false,\n    lastUpdate: 0,\n});\nexport default SplitContext;\n"]},"metadata":{},"sourceType":"module"}