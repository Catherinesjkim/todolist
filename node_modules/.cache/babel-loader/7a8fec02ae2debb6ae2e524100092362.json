{"ast":null,"code":"var _jsxFileName = \"/Users/talianassi/Desktop/todolist/src/TodoList.js\";\nimport React, { Component } from \"react\";\nimport { SplitTreatments, withSplitFactory } from \"@splitsoftware/splitio-react\";\nimport TodoItems from \"./TodoItems\";\nimport \"./TodoList.css\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    }; // instatitate the sdk in the constructor for speed\n\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  addItem(e) {\n    if (this._inputElement.value !== \"\") {\n      var newItem = {\n        text: this._inputElement.value,\n        key: Date.now()\n      };\n      this.setState(prevState => {\n        return {\n          items: prevState.items.concat(newItem)\n        };\n      });\n      this._inputElement.value = \"\";\n    }\n\n    console.log(this.state.items);\n    e.preventDefault();\n  }\n\n  deleteItem(key) {\n    var filteredItems = this.state.items.filter(function (item) {\n      return item.key !== key;\n    });\n    this.setState({\n      items: filteredItems\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(SplitTreatments, {\n      names: ['talia_todolist_delete'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, ({\n      treatments\n    }) => {\n      this.renderContent(treatments['talia_todolist_delete']);\n    });\n  }\n\n  renderContent(treatment) {\n    const buttonClass = treatment === 'on' ? 'button_new' : '';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todoListMain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: a => this._inputElement = a,\n      placeholder: \"Enter Task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: buttonClass,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, \"Add\"))), /*#__PURE__*/React.createElement(TodoItems, {\n      entries: this.state.items,\n      delete: this.deleteItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst sdkConfig = {\n  core: {\n    authorizationKey: 's2959s3memm2hp1b03u34khu1sjl0106j6qr',\n    key: 'talia.nassi@split.io'\n  }\n};\nexport default withSplitFactory(sdkConfig)(TodoList);","map":{"version":3,"sources":["/Users/talianassi/Desktop/todolist/src/TodoList.js"],"names":["React","Component","SplitTreatments","withSplitFactory","TodoItems","TodoList","constructor","props","state","items","addItem","bind","deleteItem","e","_inputElement","value","newItem","text","key","Date","now","setState","prevState","concat","console","log","preventDefault","filteredItems","filter","item","render","treatments","renderContent","treatment","buttonClass","a","sdkConfig","core","authorizationKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { SplitTreatments, withSplitFactory } from \"@splitsoftware/splitio-react\"\nimport TodoItems from \"./TodoItems\";\nimport \"./TodoList.css\";\n\nclass TodoList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: []\n        };\n        // instatitate the sdk in the constructor for speed\n        \n\n        this.addItem = this.addItem.bind(this);\n        this.deleteItem = this.deleteItem.bind(this);\n    }\n\n    addItem(e) {\n        if (this._inputElement.value !== \"\") {\n            var newItem = {\n                text: this._inputElement.value,\n                key: Date.now()\n            };\n\n            this.setState((prevState) => {\n                return {\n                    items: prevState.items.concat(newItem)\n                };\n            });\n\n            this._inputElement.value = \"\";\n        }\n\n        console.log(this.state.items);\n\n        e.preventDefault();\n    }\n\n    deleteItem(key) {\n        var filteredItems = this.state.items.filter(function (item) {\n            return (item.key !== key);\n        });\n\n        this.setState({\n            items: filteredItems\n        });\n    }\n\n    render() {\n        return (\n\n            <SplitTreatments names={['talia_todolist_delete']} >\n                {({ treatments }) => { \n                        this.renderContent(treatments['talia_todolist_delete']) \n                }}\n\n            </SplitTreatments>\n        );\n    }\n\n    renderContent(treatment) {\n        const buttonClass = treatment === 'on' ? 'button_new' : '';\n\n        return (\n            <div className=\"todoListMain\">\n                <div className=\"header\">\n                    <form onSubmit={this.addItem}>\n                        <input ref={(a) => this._inputElement = a}\n                            placeholder=\"Enter Task\">\n                        </input>\n                        <button className={buttonClass} type=\"submit\">Add</button>\n                    </form>\n                </div>\n                <TodoItems entries={this.state.items}\n                    delete={this.deleteItem} />\n            </div>\n            )\n    }\n}\n\nconst sdkConfig = {\n    core: {\n        authorizationKey: 's2959s3memm2hp1b03u34khu1sjl0106j6qr',\n        key: 'talia.nassi@split.io'\n    }\n};\n\nexport default withSplitFactory(sdkConfig)(TodoList);"]},"metadata":{},"sourceType":"module"}