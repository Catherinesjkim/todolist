{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs3/core-js-stable/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs3/core-js-stable/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors\";\nimport _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\";\nimport _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs3/helpers/esm/defineProperty\";\nimport _Object$create from \"@babel/runtime-corejs3/core-js-stable/object/create\";\nimport _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\n\nvar _context;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys(object);\n\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n\n    if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) {\n      return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      var _context4;\n\n      _forEachInstanceProperty(_context4 = ownKeys(Object(source), true)).call(_context4, function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (_Object$getOwnPropertyDescriptors) {\n      _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source));\n    } else {\n      var _context5;\n\n      _forEachInstanceProperty(_context5 = ownKeys(Object(source))).call(_context5, function (key) {\n        _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\n\n\nimport { merge } from '../lang';\nimport language from './language';\nimport runtime from './runtime';\nimport overridesPerPlatform from './defaults';\nimport storage from './storage';\nimport mode from './mode';\nimport { API } from '../../utils/logger';\nimport { STANDALONE_MODE, STORAGE_MEMORY, CONSUMER_MODE } from '../../utils/constants';\nimport { version } from '../../../package.json';\nvar eventsEndpointMatcher = /^\\/(testImpressions|metrics|events)/;\nvar base = {\n  // Define which kind of object you want to retrieve from SplitFactory\n  mode: STANDALONE_MODE,\n  core: {\n    // API token (tight to an environment)\n    authorizationKey: undefined,\n    // key used in your system (only required for browser version)\n    key: undefined,\n    // traffic type for the given key (only used on browser version)\n    trafficType: undefined,\n    // toggle impressions tracking of labels\n    labelsEnabled: true,\n    // toggle sendind (true) or not sending (false) IP and Host Name with impressions, events, and telemetries requests (only used on nodejs version)\n    IPAddressesEnabled: undefined\n  },\n  scheduler: {\n    // fetch feature updates each 30 sec\n    featuresRefreshRate: 30,\n    // fetch segments updates each 60 sec\n    segmentsRefreshRate: 60,\n    // publish metrics each 60 sec\n    metricsRefreshRate: 60,\n    // publish evaluations each 60 sec\n    impressionsRefreshRate: 60,\n    // fetch offline changes each 15 sec\n    offlineRefreshRate: 15,\n    // publish events every 60 seconds after the first flush\n    eventsPushRate: 60,\n    // how many events will be queued before flushing\n    eventsQueueSize: 500\n  },\n  urls: {\n    // CDN having all the information for your environment\n    sdk: 'https://sdk.split.io/api',\n    // Storage for your SDK events\n    events: 'https://events.split.io/api'\n  },\n  // Defines which kind of storage we should instanciate.\n  storage: {\n    type: STORAGE_MEMORY\n  },\n  // Defines if the logs are enabled, SDK wide.\n  debug: undefined,\n  // Defines the impression listener, but will only be used on NodeJS.\n  impressionListener: undefined,\n  // Instance version.\n  version: _concatInstanceProperty(_context = \"\".concat(language, \"-\")).call(_context, version)\n};\n\nfunction fromSecondsToMillis(n) {\n  return Math.round(n * 1000);\n}\n\nfunction setupLogger(debugValue) {\n  if (typeof debugValue === 'boolean') {\n    if (debugValue) {\n      API.enable();\n    } else {\n      API.disable();\n    }\n  } else if (typeof debugValue === 'string') {\n    API.setLogLevel(debugValue);\n  }\n}\n\nfunction defaults(custom) {\n  var withDefaults = merge({}, base, overridesPerPlatform, custom); // Scheduler periods\n\n  withDefaults.scheduler.featuresRefreshRate = fromSecondsToMillis(withDefaults.scheduler.featuresRefreshRate);\n  withDefaults.scheduler.segmentsRefreshRate = fromSecondsToMillis(withDefaults.scheduler.segmentsRefreshRate);\n  withDefaults.scheduler.metricsRefreshRate = fromSecondsToMillis(withDefaults.scheduler.metricsRefreshRate);\n  withDefaults.scheduler.impressionsRefreshRate = fromSecondsToMillis(withDefaults.scheduler.impressionsRefreshRate);\n  withDefaults.scheduler.offlineRefreshRate = fromSecondsToMillis(withDefaults.scheduler.offlineRefreshRate);\n  withDefaults.scheduler.eventsPushRate = fromSecondsToMillis(withDefaults.scheduler.eventsPushRate); // Startup periods\n\n  withDefaults.startup.requestTimeoutBeforeReady = fromSecondsToMillis(withDefaults.startup.requestTimeoutBeforeReady);\n  withDefaults.startup.readyTimeout = fromSecondsToMillis(withDefaults.startup.readyTimeout);\n  withDefaults.startup.eventsFirstPushWindow = fromSecondsToMillis(withDefaults.startup.eventsFirstPushWindow); // ensure a valid SDK mode\n\n  withDefaults.mode = mode(withDefaults.core.authorizationKey, withDefaults.mode); // ensure a valid Storage based on mode defined.\n\n  withDefaults.storage = storage(withDefaults);\n  setupLogger(withDefaults.debug); // Current ip/hostname information\n\n  withDefaults.runtime = runtime(withDefaults.core.IPAddressesEnabled, withDefaults.mode === CONSUMER_MODE);\n  return withDefaults;\n}\n\nvar proto = {\n  /**\n   * Switch URLs servers based on target.\n   *\n   * @param {String} target url target\n   * @return {String} completed url\n   */\n  url: function url(target) {\n    var _context3;\n\n    if (eventsEndpointMatcher.test(target)) {\n      var _context2;\n\n      return _concatInstanceProperty(_context2 = \"\".concat(this.urls.events)).call(_context2, target);\n    }\n\n    return _concatInstanceProperty(_context3 = \"\".concat(this.urls.sdk)).call(_context3, target);\n  },\n\n  /**\n   * Returns a settings clone with the key and traffic type (if provided) overriden.\n   * @param {SplitKey} key\n   * @param {string} [trafficType]\n   */\n  overrideKeyAndTT: function overrideKeyAndTT(key, trafficType) {\n    return _Object$assign(_Object$create(proto), _objectSpread({}, this, {\n      core: _objectSpread({}, this.core, {\n        key: key,\n        trafficType: trafficType\n      })\n    }));\n  }\n};\n\nvar SettingsFactory = function SettingsFactory(settings) {\n  return _Object$assign(_Object$create(proto), defaults(settings));\n};\n\nexport default SettingsFactory;","map":{"version":3,"sources":["/Users/talianassi/node_modules/@splitsoftware/splitio/es/utils/settings/index.js"],"names":["_Object$defineProperty","_Object$defineProperties","_Object$getOwnPropertyDescriptors","_forEachInstanceProperty","_Object$getOwnPropertyDescriptor","_filterInstanceProperty","_Object$getOwnPropertySymbols","_Object$keys","_defineProperty","_Object$create","_Object$assign","_concatInstanceProperty","_context","ownKeys","object","enumerableOnly","keys","symbols","call","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","_context4","Object","key","_context5","merge","language","runtime","overridesPerPlatform","storage","mode","API","STANDALONE_MODE","STORAGE_MEMORY","CONSUMER_MODE","version","eventsEndpointMatcher","base","core","authorizationKey","undefined","trafficType","labelsEnabled","IPAddressesEnabled","scheduler","featuresRefreshRate","segmentsRefreshRate","metricsRefreshRate","impressionsRefreshRate","offlineRefreshRate","eventsPushRate","eventsQueueSize","urls","sdk","events","type","debug","impressionListener","concat","fromSecondsToMillis","n","Math","round","setupLogger","debugValue","enable","disable","setLogLevel","defaults","custom","withDefaults","startup","requestTimeoutBeforeReady","readyTimeout","eventsFirstPushWindow","proto","url","_context3","test","_context2","overrideKeyAndTT","SettingsFactory","settings"],"mappings":"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","sourcesContent":["import _Object$defineProperty from \"@babel/runtime-corejs3/core-js-stable/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs3/core-js-stable/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors\";\nimport _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\";\nimport _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs3/helpers/esm/defineProperty\";\nimport _Object$create from \"@babel/runtime-corejs3/core-js-stable/object/create\";\nimport _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\n\nvar _context;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context4; _forEachInstanceProperty(_context4 = ownKeys(Object(source), true)).call(_context4, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context5; _forEachInstanceProperty(_context5 = ownKeys(Object(source))).call(_context5, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\nimport { merge } from '../lang';\nimport language from './language';\nimport runtime from './runtime';\nimport overridesPerPlatform from './defaults';\nimport storage from './storage';\nimport mode from './mode';\nimport { API } from '../../utils/logger';\nimport { STANDALONE_MODE, STORAGE_MEMORY, CONSUMER_MODE } from '../../utils/constants';\nimport { version } from '../../../package.json';\nvar eventsEndpointMatcher = /^\\/(testImpressions|metrics|events)/;\nvar base = {\n  // Define which kind of object you want to retrieve from SplitFactory\n  mode: STANDALONE_MODE,\n  core: {\n    // API token (tight to an environment)\n    authorizationKey: undefined,\n    // key used in your system (only required for browser version)\n    key: undefined,\n    // traffic type for the given key (only used on browser version)\n    trafficType: undefined,\n    // toggle impressions tracking of labels\n    labelsEnabled: true,\n    // toggle sendind (true) or not sending (false) IP and Host Name with impressions, events, and telemetries requests (only used on nodejs version)\n    IPAddressesEnabled: undefined\n  },\n  scheduler: {\n    // fetch feature updates each 30 sec\n    featuresRefreshRate: 30,\n    // fetch segments updates each 60 sec\n    segmentsRefreshRate: 60,\n    // publish metrics each 60 sec\n    metricsRefreshRate: 60,\n    // publish evaluations each 60 sec\n    impressionsRefreshRate: 60,\n    // fetch offline changes each 15 sec\n    offlineRefreshRate: 15,\n    // publish events every 60 seconds after the first flush\n    eventsPushRate: 60,\n    // how many events will be queued before flushing\n    eventsQueueSize: 500\n  },\n  urls: {\n    // CDN having all the information for your environment\n    sdk: 'https://sdk.split.io/api',\n    // Storage for your SDK events\n    events: 'https://events.split.io/api'\n  },\n  // Defines which kind of storage we should instanciate.\n  storage: {\n    type: STORAGE_MEMORY\n  },\n  // Defines if the logs are enabled, SDK wide.\n  debug: undefined,\n  // Defines the impression listener, but will only be used on NodeJS.\n  impressionListener: undefined,\n  // Instance version.\n  version: _concatInstanceProperty(_context = \"\".concat(language, \"-\")).call(_context, version)\n};\n\nfunction fromSecondsToMillis(n) {\n  return Math.round(n * 1000);\n}\n\nfunction setupLogger(debugValue) {\n  if (typeof debugValue === 'boolean') {\n    if (debugValue) {\n      API.enable();\n    } else {\n      API.disable();\n    }\n  } else if (typeof debugValue === 'string') {\n    API.setLogLevel(debugValue);\n  }\n}\n\nfunction defaults(custom) {\n  var withDefaults = merge({}, base, overridesPerPlatform, custom); // Scheduler periods\n\n  withDefaults.scheduler.featuresRefreshRate = fromSecondsToMillis(withDefaults.scheduler.featuresRefreshRate);\n  withDefaults.scheduler.segmentsRefreshRate = fromSecondsToMillis(withDefaults.scheduler.segmentsRefreshRate);\n  withDefaults.scheduler.metricsRefreshRate = fromSecondsToMillis(withDefaults.scheduler.metricsRefreshRate);\n  withDefaults.scheduler.impressionsRefreshRate = fromSecondsToMillis(withDefaults.scheduler.impressionsRefreshRate);\n  withDefaults.scheduler.offlineRefreshRate = fromSecondsToMillis(withDefaults.scheduler.offlineRefreshRate);\n  withDefaults.scheduler.eventsPushRate = fromSecondsToMillis(withDefaults.scheduler.eventsPushRate); // Startup periods\n\n  withDefaults.startup.requestTimeoutBeforeReady = fromSecondsToMillis(withDefaults.startup.requestTimeoutBeforeReady);\n  withDefaults.startup.readyTimeout = fromSecondsToMillis(withDefaults.startup.readyTimeout);\n  withDefaults.startup.eventsFirstPushWindow = fromSecondsToMillis(withDefaults.startup.eventsFirstPushWindow); // ensure a valid SDK mode\n\n  withDefaults.mode = mode(withDefaults.core.authorizationKey, withDefaults.mode); // ensure a valid Storage based on mode defined.\n\n  withDefaults.storage = storage(withDefaults);\n  setupLogger(withDefaults.debug); // Current ip/hostname information\n\n  withDefaults.runtime = runtime(withDefaults.core.IPAddressesEnabled, withDefaults.mode === CONSUMER_MODE);\n  return withDefaults;\n}\n\nvar proto = {\n  /**\n   * Switch URLs servers based on target.\n   *\n   * @param {String} target url target\n   * @return {String} completed url\n   */\n  url: function url(target) {\n    var _context3;\n\n    if (eventsEndpointMatcher.test(target)) {\n      var _context2;\n\n      return _concatInstanceProperty(_context2 = \"\".concat(this.urls.events)).call(_context2, target);\n    }\n\n    return _concatInstanceProperty(_context3 = \"\".concat(this.urls.sdk)).call(_context3, target);\n  },\n\n  /**\n   * Returns a settings clone with the key and traffic type (if provided) overriden.\n   * @param {SplitKey} key\n   * @param {string} [trafficType]\n   */\n  overrideKeyAndTT: function overrideKeyAndTT(key, trafficType) {\n    return _Object$assign(_Object$create(proto), _objectSpread({}, this, {\n      core: _objectSpread({}, this.core, {\n        key: key,\n        trafficType: trafficType\n      })\n    }));\n  }\n};\n\nvar SettingsFactory = function SettingsFactory(settings) {\n  return _Object$assign(_Object$create(proto), defaults(settings));\n};\n\nexport default SettingsFactory;"]},"metadata":{},"sourceType":"module"}