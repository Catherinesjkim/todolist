{"ast":null,"code":"// The string below is a marker and will be replaced by the real version number. DO NOT CHANGE\nexport const VERSION = 'react-' + '1.1.0'; // Treatments\n\nexport const ON = 'on';\nexport const OFF = 'off';\nexport const CONTROL = 'control'; // SplitIO default value\n\nexport const CONTROL_WITH_CONFIG = {\n  treatment: 'control',\n  config: null\n};\nexport const getControlTreatmentsWithConfig = splitNames => {\n  return splitNames.reduce((pValue, cValue) => {\n    pValue[cValue] = CONTROL_WITH_CONFIG;\n    return pValue;\n  }, {});\n}; // Warning and error messages\n\nexport const WARN_SF_CONFIG_AND_FACTORY = '[WARN] Both a config and factory props were provided to SplitFactory. Config prop will be ignored.';\nexport const ERROR_SF_NO_CONFIG_AND_FACTORY = '[ERROR] SplitFactory must receive either a Split config or a Split factory as props.';\nexport const ERROR_SC_NO_FACTORY = '[ERROR] SplitClient does not have access to a Split factory. This is because it is not inside the scope of a SplitFactory component or SplitFactory was not properly instantiated.';\nexport const WARN_ST_NO_CLIENT = '[WARN] SplitTreatments does not have access to a Split client. This is because it is not inside the scope of a SplitFactory component or SplitFactory was not properly instantiated.';","map":{"version":3,"sources":["/Users/talianassi/Desktop/todolist/node_modules/@splitsoftware/splitio-react/es/constants.js"],"names":["VERSION","ON","OFF","CONTROL","CONTROL_WITH_CONFIG","treatment","config","getControlTreatmentsWithConfig","splitNames","reduce","pValue","cValue","WARN_SF_CONFIG_AND_FACTORY","ERROR_SF_NO_CONFIG_AND_FACTORY","ERROR_SC_NO_FACTORY","WARN_ST_NO_CLIENT"],"mappings":"AAAA;AACA,OAAO,MAAMA,OAAO,GAAG,WAAW,OAA3B,C,CACP;;AACA,OAAO,MAAMC,EAAE,GAAG,IAAX;AACP,OAAO,MAAMC,GAAG,GAAG,KAAZ;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB,C,CAA2B;;AAClC,OAAO,MAAMC,mBAAmB,GAAG;AAC/BC,EAAAA,SAAS,EAAE,SADoB;AAE/BC,EAAAA,MAAM,EAAE;AAFuB,CAA5B;AAIP,OAAO,MAAMC,8BAA8B,GAAIC,UAAD,IAAgB;AAC1D,SAAOA,UAAU,CAACC,MAAX,CAAkB,CAACC,MAAD,EAASC,MAAT,KAAoB;AACzCD,IAAAA,MAAM,CAACC,MAAD,CAAN,GAAiBP,mBAAjB;AACA,WAAOM,MAAP;AACH,GAHM,EAGJ,EAHI,CAAP;AAIH,CALM,C,CAMP;;AACA,OAAO,MAAME,0BAA0B,GAAG,oGAAnC;AACP,OAAO,MAAMC,8BAA8B,GAAG,sFAAvC;AACP,OAAO,MAAMC,mBAAmB,GAAG,oLAA5B;AACP,OAAO,MAAMC,iBAAiB,GAAG,sLAA1B","sourcesContent":["// The string below is a marker and will be replaced by the real version number. DO NOT CHANGE\nexport const VERSION = 'react-' + '1.1.0';\n// Treatments\nexport const ON = 'on';\nexport const OFF = 'off';\nexport const CONTROL = 'control'; // SplitIO default value\nexport const CONTROL_WITH_CONFIG = {\n    treatment: 'control',\n    config: null,\n};\nexport const getControlTreatmentsWithConfig = (splitNames) => {\n    return splitNames.reduce((pValue, cValue) => {\n        pValue[cValue] = CONTROL_WITH_CONFIG;\n        return pValue;\n    }, {});\n};\n// Warning and error messages\nexport const WARN_SF_CONFIG_AND_FACTORY = '[WARN] Both a config and factory props were provided to SplitFactory. Config prop will be ignored.';\nexport const ERROR_SF_NO_CONFIG_AND_FACTORY = '[ERROR] SplitFactory must receive either a Split config or a Split factory as props.';\nexport const ERROR_SC_NO_FACTORY = '[ERROR] SplitClient does not have access to a Split factory. This is because it is not inside the scope of a SplitFactory component or SplitFactory was not properly instantiated.';\nexport const WARN_ST_NO_CLIENT = '[WARN] SplitTreatments does not have access to a Split client. This is because it is not inside the scope of a SplitFactory component or SplitFactory was not properly instantiated.';\n"]},"metadata":{},"sourceType":"module"}