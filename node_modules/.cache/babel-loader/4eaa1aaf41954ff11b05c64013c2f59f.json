{"ast":null,"code":"import * as React from 'react';\nimport SplitFactory from './SplitFactory';\n/**\n * High-Order Component for SplitFactory.\n * The wrapped component receives all the props of the container,\n * along with the passed props from SplitFactory (see ISplitFactoryChildProps).\n *\n * @param config Config object used to instantiate a Split factory\n * @param factory Split factory instance to use instead of creating a new one with the config object.\n */\n\nexport function withSplitFactory(config, factory) {\n  return function withSplitFactoryHoc(WrappedComponent, updateOnSdkUpdate = false, updateOnSdkTimedout = false, updateOnSdkReady = true) {\n    return props => {\n      return React.createElement(SplitFactory, {\n        config: config,\n        factory: factory,\n        updateOnSdkUpdate: updateOnSdkUpdate,\n        updateOnSdkTimedout: updateOnSdkTimedout,\n        updateOnSdkReady: updateOnSdkReady\n      }, splitProps => {\n        return React.createElement(WrappedComponent, Object.assign({}, props, splitProps));\n      });\n    };\n  };\n}\nexport default withSplitFactory;","map":{"version":3,"sources":["/Users/talianassi/Desktop/todolist/node_modules/@splitsoftware/splitio-react/es/withSplitFactory.js"],"names":["React","SplitFactory","withSplitFactory","config","factory","withSplitFactoryHoc","WrappedComponent","updateOnSdkUpdate","updateOnSdkTimedout","updateOnSdkReady","props","createElement","splitProps","Object","assign"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA;;;;;;;;;AAQA,OAAO,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,OAAlC,EAA2C;AAC9C,SAAO,SAASC,mBAAT,CAA6BC,gBAA7B,EAA+CC,iBAAiB,GAAG,KAAnE,EAA0EC,mBAAmB,GAAG,KAAhG,EAAuGC,gBAAgB,GAAG,IAA1H,EAAgI;AACnI,WAAQC,KAAD,IAAW;AACd,aAAQV,KAAK,CAACW,aAAN,CAAoBV,YAApB,EAAkC;AAAEE,QAAAA,MAAM,EAAEA,MAAV;AAAkBC,QAAAA,OAAO,EAAEA,OAA3B;AAAoCG,QAAAA,iBAAiB,EAAEA,iBAAvD;AAA0EC,QAAAA,mBAAmB,EAAEA,mBAA/F;AAAoHC,QAAAA,gBAAgB,EAAEA;AAAtI,OAAlC,EAA6LG,UAAD,IAAgB;AAChN,eAAQZ,KAAK,CAACW,aAAN,CAAoBL,gBAApB,EAAsCO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyBE,UAAzB,CAAtC,CAAR;AACH,OAFO,CAAR;AAGH,KAJD;AAKH,GAND;AAOH;AACD,eAAeV,gBAAf","sourcesContent":["import * as React from 'react';\nimport SplitFactory from './SplitFactory';\n/**\n * High-Order Component for SplitFactory.\n * The wrapped component receives all the props of the container,\n * along with the passed props from SplitFactory (see ISplitFactoryChildProps).\n *\n * @param config Config object used to instantiate a Split factory\n * @param factory Split factory instance to use instead of creating a new one with the config object.\n */\nexport function withSplitFactory(config, factory) {\n    return function withSplitFactoryHoc(WrappedComponent, updateOnSdkUpdate = false, updateOnSdkTimedout = false, updateOnSdkReady = true) {\n        return (props) => {\n            return (React.createElement(SplitFactory, { config: config, factory: factory, updateOnSdkUpdate: updateOnSdkUpdate, updateOnSdkTimedout: updateOnSdkTimedout, updateOnSdkReady: updateOnSdkReady }, (splitProps) => {\n                return (React.createElement(WrappedComponent, Object.assign({}, props, splitProps)));\n            }));\n        };\n    };\n}\nexport default withSplitFactory;\n"]},"metadata":{},"sourceType":"module"}