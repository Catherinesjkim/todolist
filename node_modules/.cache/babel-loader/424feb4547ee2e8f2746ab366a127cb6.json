{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";\nimport _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";\n/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\n\nimport logFactory from '../../utils/logger';\nvar log = logFactory('splitio-engine:matcher');\nimport thenable from '../../utils/promise/thenable';\n\nfunction checkTreatment(evaluation, acceptableTreatments, parentName) {\n  var _context, _context2, _context3, _context4, _context5;\n\n  var matches = false;\n\n  if (_Array$isArray(acceptableTreatments)) {\n    matches = _indexOfInstanceProperty(acceptableTreatments).call(acceptableTreatments, evaluation.treatment) !== -1;\n  }\n\n  log.debug(_concatInstanceProperty(_context = _concatInstanceProperty(_context2 = _concatInstanceProperty(_context3 = _concatInstanceProperty(_context4 = _concatInstanceProperty(_context5 = \"[dependencyMatcher] Parent split \\\"\".concat(parentName, \"\\\" evaluated to \\\"\")).call(_context5, evaluation.treatment, \"\\\" with label \\\"\")).call(_context4, evaluation.label, \"\\\". \")).call(_context3, parentName, \" evaluated treatment is part of [\")).call(_context2, acceptableTreatments, \"] ? \")).call(_context, matches, \".\"));\n  return matches;\n}\n\nfunction dependencyMatcherContext(_ref, storage) {\n  var split = _ref.split,\n      treatments = _ref.treatments;\n  return function dependencyMatcher(_ref2, splitEvaluator) {\n    var _context6, _context7;\n\n    var key = _ref2.key,\n        attributes = _ref2.attributes;\n    log.debug(_concatInstanceProperty(_context6 = _concatInstanceProperty(_context7 = \"[dependencyMatcher] will evaluate parent split: \\\"\".concat(split, \"\\\" with key: \")).call(_context7, _JSON$stringify(key), \" \")).call(_context6, attributes ? \"\\n attributes: \".concat(_JSON$stringify(attributes)) : ''));\n    var evaluation = splitEvaluator(key, split, attributes, storage);\n\n    if (thenable(evaluation)) {\n      return evaluation.then(function (ev) {\n        return checkTreatment(ev, treatments, split);\n      });\n    } else {\n      return checkTreatment(evaluation, treatments, split);\n    }\n  };\n}\n\nexport default dependencyMatcherContext;","map":{"version":3,"sources":["/Users/talianassi/node_modules/@splitsoftware/splitio/es/engine/matchers/dependency.js"],"names":["_JSON$stringify","_concatInstanceProperty","_indexOfInstanceProperty","_Array$isArray","logFactory","log","thenable","checkTreatment","evaluation","acceptableTreatments","parentName","_context","_context2","_context3","_context4","_context5","matches","call","treatment","debug","concat","label","dependencyMatcherContext","_ref","storage","split","treatments","dependencyMatcher","_ref2","splitEvaluator","_context6","_context7","key","attributes","then","ev"],"mappings":"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","sourcesContent":["import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";\nimport _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";\n\n/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\nimport logFactory from '../../utils/logger';\nvar log = logFactory('splitio-engine:matcher');\nimport thenable from '../../utils/promise/thenable';\n\nfunction checkTreatment(evaluation, acceptableTreatments, parentName) {\n  var _context, _context2, _context3, _context4, _context5;\n\n  var matches = false;\n\n  if (_Array$isArray(acceptableTreatments)) {\n    matches = _indexOfInstanceProperty(acceptableTreatments).call(acceptableTreatments, evaluation.treatment) !== -1;\n  }\n\n  log.debug(_concatInstanceProperty(_context = _concatInstanceProperty(_context2 = _concatInstanceProperty(_context3 = _concatInstanceProperty(_context4 = _concatInstanceProperty(_context5 = \"[dependencyMatcher] Parent split \\\"\".concat(parentName, \"\\\" evaluated to \\\"\")).call(_context5, evaluation.treatment, \"\\\" with label \\\"\")).call(_context4, evaluation.label, \"\\\". \")).call(_context3, parentName, \" evaluated treatment is part of [\")).call(_context2, acceptableTreatments, \"] ? \")).call(_context, matches, \".\"));\n  return matches;\n}\n\nfunction dependencyMatcherContext(_ref, storage) {\n  var split = _ref.split,\n      treatments = _ref.treatments;\n  return function dependencyMatcher(_ref2, splitEvaluator) {\n    var _context6, _context7;\n\n    var key = _ref2.key,\n        attributes = _ref2.attributes;\n    log.debug(_concatInstanceProperty(_context6 = _concatInstanceProperty(_context7 = \"[dependencyMatcher] will evaluate parent split: \\\"\".concat(split, \"\\\" with key: \")).call(_context7, _JSON$stringify(key), \" \")).call(_context6, attributes ? \"\\n attributes: \".concat(_JSON$stringify(attributes)) : ''));\n    var evaluation = splitEvaluator(key, split, attributes, storage);\n\n    if (thenable(evaluation)) {\n      return evaluation.then(function (ev) {\n        return checkTreatment(ev, treatments, split);\n      });\n    } else {\n      return checkTreatment(evaluation, treatments, split);\n    }\n  };\n}\n\nexport default dependencyMatcherContext;"]},"metadata":{},"sourceType":"module"}