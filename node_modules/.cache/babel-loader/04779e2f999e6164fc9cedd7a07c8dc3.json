{"ast":null,"code":"import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport _classCallCheck from \"@babel/runtime-corejs3/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs3/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs3/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs3/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs3/helpers/esm/inherits\";\nimport { startsWith } from '../utils/lang';\nimport KeyBuilder from './Keys';\nimport { matching } from '../utils/key/factory';\n\nvar KeyBuilderForLocalStorage = /*#__PURE__*/function (_KeyBuilder) {\n  _inherits(KeyBuilderForLocalStorage, _KeyBuilder);\n\n  function KeyBuilderForLocalStorage() {\n    _classCallCheck(this, KeyBuilderForLocalStorage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(KeyBuilderForLocalStorage).apply(this, arguments));\n  }\n\n  _createClass(KeyBuilderForLocalStorage, [{\n    key: \"buildSegmentNameKey\",\n    value: function buildSegmentNameKey(segmentName) {\n      var _context, _context2;\n\n      return _concatInstanceProperty(_context = _concatInstanceProperty(_context2 = \"\".concat(matching(this.settings.core.key), \".\")).call(_context2, this.settings.storage.prefix, \".segment.\")).call(_context, segmentName);\n    }\n  }, {\n    key: \"extractSegmentName\",\n    value: function extractSegmentName(builtSegmentKeyName) {\n      var _context3;\n\n      var prefix = _concatInstanceProperty(_context3 = \"\".concat(matching(this.settings.core.key), \".\")).call(_context3, this.settings.storage.prefix, \".segment.\");\n\n      if (startsWith(builtSegmentKeyName, prefix)) return builtSegmentKeyName.substr(prefix.length);\n    }\n  }, {\n    key: \"buildSplitsWithSegmentCountKey\",\n    value: function buildSplitsWithSegmentCountKey() {\n      return \"\".concat(this.settings.storage.prefix, \".splits.usingSegments\");\n    }\n  }]);\n\n  return KeyBuilderForLocalStorage;\n}(KeyBuilder);\n\nexport default KeyBuilderForLocalStorage;","map":{"version":3,"sources":["/Users/talianassi/Desktop/todolist/node_modules/@splitsoftware/splitio/es/storage/KeysLocalStorage.js"],"names":["_concatInstanceProperty","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","startsWith","KeyBuilder","matching","KeyBuilderForLocalStorage","_KeyBuilder","apply","arguments","key","value","buildSegmentNameKey","segmentName","_context","_context2","concat","settings","core","call","storage","prefix","extractSegmentName","builtSegmentKeyName","_context3","substr","length","buildSplitsWithSegmentCountKey"],"mappings":"AAAA,OAAOA,uBAAP,MAAoC,uDAApC;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AACA,OAAOC,YAAP,MAAyB,gDAAzB;AACA,OAAOC,0BAAP,MAAuC,8DAAvC;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AACA,OAAOC,SAAP,MAAsB,6CAAtB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,UAAP,MAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,sBAAzB;;AAEA,IAAIC,yBAAyB,GAC7B,aACA,UAAUC,WAAV,EAAuB;AACrBL,EAAAA,SAAS,CAACI,yBAAD,EAA4BC,WAA5B,CAAT;;AAEA,WAASD,yBAAT,GAAqC;AACnCR,IAAAA,eAAe,CAAC,IAAD,EAAOQ,yBAAP,CAAf;;AAEA,WAAON,0BAA0B,CAAC,IAAD,EAAOC,eAAe,CAACK,yBAAD,CAAf,CAA2CE,KAA3C,CAAiD,IAAjD,EAAuDC,SAAvD,CAAP,CAAjC;AACD;;AAEDV,EAAAA,YAAY,CAACO,yBAAD,EAA4B,CAAC;AACvCI,IAAAA,GAAG,EAAE,qBADkC;AAEvCC,IAAAA,KAAK,EAAE,SAASC,mBAAT,CAA6BC,WAA7B,EAA0C;AAC/C,UAAIC,QAAJ,EAAcC,SAAd;;AAEA,aAAOlB,uBAAuB,CAACiB,QAAQ,GAAGjB,uBAAuB,CAACkB,SAAS,GAAG,GAAGC,MAAH,CAAUX,QAAQ,CAAC,KAAKY,QAAL,CAAcC,IAAd,CAAmBR,GAApB,CAAlB,EAA4C,GAA5C,CAAb,CAAvB,CAAsFS,IAAtF,CAA2FJ,SAA3F,EAAsG,KAAKE,QAAL,CAAcG,OAAd,CAAsBC,MAA5H,EAAoI,WAApI,CAAZ,CAAvB,CAAqLF,IAArL,CAA0LL,QAA1L,EAAoMD,WAApM,CAAP;AACD;AANsC,GAAD,EAOrC;AACDH,IAAAA,GAAG,EAAE,oBADJ;AAEDC,IAAAA,KAAK,EAAE,SAASW,kBAAT,CAA4BC,mBAA5B,EAAiD;AACtD,UAAIC,SAAJ;;AAEA,UAAIH,MAAM,GAAGxB,uBAAuB,CAAC2B,SAAS,GAAG,GAAGR,MAAH,CAAUX,QAAQ,CAAC,KAAKY,QAAL,CAAcC,IAAd,CAAmBR,GAApB,CAAlB,EAA4C,GAA5C,CAAb,CAAvB,CAAsFS,IAAtF,CAA2FK,SAA3F,EAAsG,KAAKP,QAAL,CAAcG,OAAd,CAAsBC,MAA5H,EAAoI,WAApI,CAAb;;AAEA,UAAIlB,UAAU,CAACoB,mBAAD,EAAsBF,MAAtB,CAAd,EAA6C,OAAOE,mBAAmB,CAACE,MAApB,CAA2BJ,MAAM,CAACK,MAAlC,CAAP;AAC9C;AARA,GAPqC,EAgBrC;AACDhB,IAAAA,GAAG,EAAE,gCADJ;AAEDC,IAAAA,KAAK,EAAE,SAASgB,8BAAT,GAA0C;AAC/C,aAAO,GAAGX,MAAH,CAAU,KAAKC,QAAL,CAAcG,OAAd,CAAsBC,MAAhC,EAAwC,uBAAxC,CAAP;AACD;AAJA,GAhBqC,CAA5B,CAAZ;;AAuBA,SAAOf,yBAAP;AACD,CAjCD,CAiCEF,UAjCF,CAFA;;AAqCA,eAAeE,yBAAf","sourcesContent":["import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport _classCallCheck from \"@babel/runtime-corejs3/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs3/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs3/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs3/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs3/helpers/esm/inherits\";\nimport { startsWith } from '../utils/lang';\nimport KeyBuilder from './Keys';\nimport { matching } from '../utils/key/factory';\n\nvar KeyBuilderForLocalStorage =\n/*#__PURE__*/\nfunction (_KeyBuilder) {\n  _inherits(KeyBuilderForLocalStorage, _KeyBuilder);\n\n  function KeyBuilderForLocalStorage() {\n    _classCallCheck(this, KeyBuilderForLocalStorage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(KeyBuilderForLocalStorage).apply(this, arguments));\n  }\n\n  _createClass(KeyBuilderForLocalStorage, [{\n    key: \"buildSegmentNameKey\",\n    value: function buildSegmentNameKey(segmentName) {\n      var _context, _context2;\n\n      return _concatInstanceProperty(_context = _concatInstanceProperty(_context2 = \"\".concat(matching(this.settings.core.key), \".\")).call(_context2, this.settings.storage.prefix, \".segment.\")).call(_context, segmentName);\n    }\n  }, {\n    key: \"extractSegmentName\",\n    value: function extractSegmentName(builtSegmentKeyName) {\n      var _context3;\n\n      var prefix = _concatInstanceProperty(_context3 = \"\".concat(matching(this.settings.core.key), \".\")).call(_context3, this.settings.storage.prefix, \".segment.\");\n\n      if (startsWith(builtSegmentKeyName, prefix)) return builtSegmentKeyName.substr(prefix.length);\n    }\n  }, {\n    key: \"buildSplitsWithSegmentCountKey\",\n    value: function buildSplitsWithSegmentCountKey() {\n      return \"\".concat(this.settings.storage.prefix, \".splits.usingSegments\");\n    }\n  }]);\n\n  return KeyBuilderForLocalStorage;\n}(KeyBuilder);\n\nexport default KeyBuilderForLocalStorage;"]},"metadata":{},"sourceType":"module"}