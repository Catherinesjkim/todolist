{"ast":null,"code":"import _trimInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/trim\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport { isObject, isString, isFinite, toString } from '../lang';\nimport logFactory from '../logger';\nvar log = logFactory('', {\n  displayAllErrors: true\n});\nvar KEY_MAX_LENGTH = 250;\n\nfunction validateKeyValue(maybeKey, method, type) {\n  if (maybeKey == undefined) {\n    var _context, _context2; // eslint-disable-line eqeqeq\n\n\n    log.error(_concatInstanceProperty(_context = _concatInstanceProperty(_context2 = \"\".concat(method, \": you passed a null or undefined \")).call(_context2, type, \", \")).call(_context, type, \" must be a non-empty string.\"));\n  } else if (isFinite(maybeKey) || isString(maybeKey)) {\n    if (isFinite(maybeKey)) {\n      var _context3, _context4;\n\n      log.warn(_concatInstanceProperty(_context3 = _concatInstanceProperty(_context4 = \"\".concat(method, \": \")).call(_context4, type, \" \\\"\")).call(_context3, maybeKey, \"\\\" is not of type string, converting.\"));\n      return toString(maybeKey);\n    } // It's a string, start by trimming the value.\n\n\n    maybeKey = _trimInstanceProperty(maybeKey).call(maybeKey); // It's aaaaaall good.\n\n    if (maybeKey.length > 0 && maybeKey.length <= KEY_MAX_LENGTH) return maybeKey;\n\n    if (maybeKey.length === 0) {\n      var _context5;\n\n      log.error(_concatInstanceProperty(_context5 = \"\".concat(method, \": you passed an empty string, \")).call(_context5, type, \" must be a non-empty string.\"));\n    } else if (maybeKey.length > KEY_MAX_LENGTH) {\n      var _context6, _context7;\n\n      log.error(_concatInstanceProperty(_context6 = _concatInstanceProperty(_context7 = \"\".concat(method, \": \")).call(_context7, type, \" too long, \")).call(_context6, type, \" must be 250 characters or less.\"));\n    }\n  } else {\n    var _context8, _context9;\n\n    log.error(_concatInstanceProperty(_context8 = _concatInstanceProperty(_context9 = \"\".concat(method, \": you passed an invalid \")).call(_context9, type, \" type, \")).call(_context8, type, \" must be a non-empty string.\"));\n  }\n\n  return false;\n}\n\nexport function validateKey(maybeKey, method) {\n  if (isObject(maybeKey)) {\n    // Validate key object\n    var matchingKey = validateKeyValue(maybeKey.matchingKey, method, 'matchingKey');\n    var bucketingKey = validateKeyValue(maybeKey.bucketingKey, method, 'bucketingKey');\n    if (matchingKey && bucketingKey) return {\n      matchingKey: matchingKey,\n      bucketingKey: bucketingKey\n    };\n    log.error(\"\".concat(method, \": Key must be an object with bucketingKey and matchingKey with valid string properties.\"));\n    return false;\n  } else {\n    return validateKeyValue(maybeKey, method, 'key');\n  }\n}","map":{"version":3,"sources":["/Users/talianassi/node_modules/@splitsoftware/splitio/es/utils/inputValidation/key.js"],"names":["_trimInstanceProperty","_concatInstanceProperty","isObject","isString","isFinite","toString","logFactory","log","displayAllErrors","KEY_MAX_LENGTH","validateKeyValue","maybeKey","method","type","undefined","_context","_context2","error","concat","call","_context3","_context4","warn","length","_context5","_context6","_context7","_context8","_context9","validateKey","matchingKey","bucketingKey"],"mappings":"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","sourcesContent":["import _trimInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/trim\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport { isObject, isString, isFinite, toString } from '../lang';\nimport logFactory from '../logger';\nvar log = logFactory('', {\n  displayAllErrors: true\n});\nvar KEY_MAX_LENGTH = 250;\n\nfunction validateKeyValue(maybeKey, method, type) {\n  if (maybeKey == undefined) {\n    var _context, _context2;\n\n    // eslint-disable-line eqeqeq\n    log.error(_concatInstanceProperty(_context = _concatInstanceProperty(_context2 = \"\".concat(method, \": you passed a null or undefined \")).call(_context2, type, \", \")).call(_context, type, \" must be a non-empty string.\"));\n  } else if (isFinite(maybeKey) || isString(maybeKey)) {\n    if (isFinite(maybeKey)) {\n      var _context3, _context4;\n\n      log.warn(_concatInstanceProperty(_context3 = _concatInstanceProperty(_context4 = \"\".concat(method, \": \")).call(_context4, type, \" \\\"\")).call(_context3, maybeKey, \"\\\" is not of type string, converting.\"));\n      return toString(maybeKey);\n    } // It's a string, start by trimming the value.\n\n\n    maybeKey = _trimInstanceProperty(maybeKey).call(maybeKey); // It's aaaaaall good.\n\n    if (maybeKey.length > 0 && maybeKey.length <= KEY_MAX_LENGTH) return maybeKey;\n\n    if (maybeKey.length === 0) {\n      var _context5;\n\n      log.error(_concatInstanceProperty(_context5 = \"\".concat(method, \": you passed an empty string, \")).call(_context5, type, \" must be a non-empty string.\"));\n    } else if (maybeKey.length > KEY_MAX_LENGTH) {\n      var _context6, _context7;\n\n      log.error(_concatInstanceProperty(_context6 = _concatInstanceProperty(_context7 = \"\".concat(method, \": \")).call(_context7, type, \" too long, \")).call(_context6, type, \" must be 250 characters or less.\"));\n    }\n  } else {\n    var _context8, _context9;\n\n    log.error(_concatInstanceProperty(_context8 = _concatInstanceProperty(_context9 = \"\".concat(method, \": you passed an invalid \")).call(_context9, type, \" type, \")).call(_context8, type, \" must be a non-empty string.\"));\n  }\n\n  return false;\n}\n\nexport function validateKey(maybeKey, method) {\n  if (isObject(maybeKey)) {\n    // Validate key object\n    var matchingKey = validateKeyValue(maybeKey.matchingKey, method, 'matchingKey');\n    var bucketingKey = validateKeyValue(maybeKey.bucketingKey, method, 'bucketingKey');\n    if (matchingKey && bucketingKey) return {\n      matchingKey: matchingKey,\n      bucketingKey: bucketingKey\n    };\n    log.error(\"\".concat(method, \": Key must be an object with bucketingKey and matchingKey with valid string properties.\"));\n    return false;\n  } else {\n    return validateKeyValue(maybeKey, method, 'key');\n  }\n}"]},"metadata":{},"sourceType":"module"}