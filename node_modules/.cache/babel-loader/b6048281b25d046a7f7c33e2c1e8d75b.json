{"ast":null,"code":"import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport _someInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/some\";\n/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\n\nimport logFactory from '../../utils/logger';\nvar log = logFactory('splitio-engine:matcher');\nimport { endsWith as strEndsWith } from '../../utils/lang';\n\nfunction endsWithMatcherContext(ruleAttr\n/*: array */\n)\n/*: Function */\n{\n  return function endsWithMatcher(runtimeAttr\n  /*: string */\n  )\n  /*: boolean */\n  {\n    var _context, _context2;\n\n    var endsWith = _someInstanceProperty(ruleAttr).call(ruleAttr, function (e) {\n      return strEndsWith(runtimeAttr, e);\n    });\n\n    log.debug(_concatInstanceProperty(_context = _concatInstanceProperty(_context2 = \"[endsWithMatcher] \".concat(runtimeAttr, \" ends with \")).call(_context2, ruleAttr, \"? \")).call(_context, endsWith));\n    return endsWith;\n  };\n}\n\nexport default endsWithMatcherContext;","map":{"version":3,"sources":["/Users/talianassi/Desktop/todolist/node_modules/@splitsoftware/splitio/es/engine/matchers/ew.js"],"names":["_concatInstanceProperty","_someInstanceProperty","logFactory","log","endsWith","strEndsWith","endsWithMatcherContext","ruleAttr","endsWithMatcher","runtimeAttr","_context","_context2","call","e","debug","concat"],"mappings":"AAAA,OAAOA,uBAAP,MAAoC,uDAApC;AACA,OAAOC,qBAAP,MAAkC,qDAAlC;AAEA;;;;;;;;;;;;;;;;AAeA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,IAAIC,GAAG,GAAGD,UAAU,CAAC,wBAAD,CAApB;AACA,SAASE,QAAQ,IAAIC,WAArB,QAAwC,kBAAxC;;AAEA,SAASC,sBAAT,CAAgCC;AAChC;AADA;AAGA;AACA;AACE,SAAO,SAASC,eAAT,CAAyBC;AAChC;AADO;AAGP;AACA;AACE,QAAIC,QAAJ,EAAcC,SAAd;;AAEA,QAAIP,QAAQ,GAAGH,qBAAqB,CAACM,QAAD,CAArB,CAAgCK,IAAhC,CAAqCL,QAArC,EAA+C,UAAUM,CAAV,EAAa;AACzE,aAAOR,WAAW,CAACI,WAAD,EAAcI,CAAd,CAAlB;AACD,KAFc,CAAf;;AAIAV,IAAAA,GAAG,CAACW,KAAJ,CAAUd,uBAAuB,CAACU,QAAQ,GAAGV,uBAAuB,CAACW,SAAS,GAAG,qBAAqBI,MAArB,CAA4BN,WAA5B,EAAyC,aAAzC,CAAb,CAAvB,CAA6FG,IAA7F,CAAkGD,SAAlG,EAA6GJ,QAA7G,EAAuH,IAAvH,CAAZ,CAAvB,CAAiKK,IAAjK,CAAsKF,QAAtK,EAAgLN,QAAhL,CAAV;AACA,WAAOA,QAAP;AACD,GAbD;AAcD;;AAED,eAAeE,sBAAf","sourcesContent":["import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport _someInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/some\";\n\n/**\nCopyright 2016 Split Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n**/\nimport logFactory from '../../utils/logger';\nvar log = logFactory('splitio-engine:matcher');\nimport { endsWith as strEndsWith } from '../../utils/lang';\n\nfunction endsWithMatcherContext(ruleAttr\n/*: array */\n)\n/*: Function */\n{\n  return function endsWithMatcher(runtimeAttr\n  /*: string */\n  )\n  /*: boolean */\n  {\n    var _context, _context2;\n\n    var endsWith = _someInstanceProperty(ruleAttr).call(ruleAttr, function (e) {\n      return strEndsWith(runtimeAttr, e);\n    });\n\n    log.debug(_concatInstanceProperty(_context = _concatInstanceProperty(_context2 = \"[endsWithMatcher] \".concat(runtimeAttr, \" ends with \")).call(_context2, ruleAttr, \"? \")).call(_context, endsWith));\n    return endsWith;\n  };\n}\n\nexport default endsWithMatcherContext;"]},"metadata":{},"sourceType":"module"}